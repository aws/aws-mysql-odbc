name: Build and Run Failover Tests

on:
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - '**/*.md'

env:
  BUILD_TYPE: Release

jobs:
  build-windows:
    name: Windows Build & Run Failover Tests
    runs-on: windows-2019
    env:
      CMAKE_GENERATOR: Visual Studio 16 2019
      MYSQL_DIR: C:/mysql-8.0.26-winx64
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      # Configure build environment/dependencies
      - name: Install MySQL client libs
        run: |
          curl https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.26-winx64.zip -o mysql.zip
          unzip -d C:/ mysql.zip
            
      - name: Create build environment
        shell: bash
        run: cmake -E make_directory ${{ github.workspace }}/build

      - name: Configure CMake
        shell: bash
        run: cmake -S . -B build -A x64
                -G "$CMAKE_GENERATOR"
                -DCMAKE_BUILD_TYPE=$BUILD_TYPE
                -DMYSQLCLIENT_STATIC_LINKING=TRUE
                -DENABLE_GTESTS=TRUE

      # Configure test environment
      - name: Build Driver and Copy files
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: |
          cmake --build . --config $BUILD_TYPE

      - name: Run failover tests
        if: always()
        working-directory: ${{ github.workspace }}/build/testing
        shell: bash
        run: ctest -C $BUILD_TYPE --output-on-failure
        env:
          TEST_DSN: test
          TEST_UID: root
          TEST_DRIVER: MySQL ODBC 8.0 Driver

      # Upload artifacts
      - name: Upload build artifacts - Binaries
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: windows-failover-sln
          path: ${{ github.workspace }}/build/MySQL_Connector_ODBC.sln
      - name: Upload build artifacts - Binaries
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: windows-failover-binaries
          path: ${{ github.workspace }}/build/bin/
      - name: Upload build artifacts - Libraries
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: windows-failover-libraries
          path: ${{ github.workspace }}/build/lib/
      - name: Upload failover test artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: windows-failover_results
          path: ${{ github.workspace }}/build/testing/Testing/Temporary/LastTest.log

  build-linux:
    name: Linux Build & Run Failover Tests
    runs-on: ubuntu-latest
    env:
      CMAKE_GENERATOR: Unix Makefiles
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      # Configure build environment/dependencies
      - name: Install MySQL client libs & other dependencies
        run: sudo apt-get update && sudo apt-get install 
                build-essential 
                libgtk-3-dev 
                libmysqlclient-dev 
                unixodbc
                unixodbc-dev

      - name: Create build environment
        shell: bash
        run: cmake -E make_directory ${{ github.workspace }}/build

      - name: Configure CMake
        shell: bash
        run: cmake -S . -B build
                -G "$CMAKE_GENERATOR"
                -DCMAKE_BUILD_TYPE=$BUILD_TYPE
                -DMYSQLCLIENT_STATIC_LINKING=true
                -DWITH_UNIXODBC=1
                -DENABLE_GTESTS=TRUE

      # Build driver
      - name: Build driver
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      # Test driver
      - name: Run failover tests on Linux
        if: success()
        working-directory: ${{ github.workspace }}/build/testing
        shell: bash
        run: ctest --output-on-failure

      # Upload artifacts
      - name: Upload build artifacts - Binaries
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: linux-failover-binaries
          path: ${{ github.workspace }}/build/bin/
      - name: Upload build artifacts - Libraries
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: linux-failover-libraries
          path: ${{ github.workspace }}/build/lib/
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: linux-failover_results
          path: ${{ github.workspace }}/build/testing/Testing/Temporary/LastTest.log
