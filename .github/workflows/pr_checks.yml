name: PR Checks

on: pull_request

env:
  BUILD_TYPE: Release

jobs:

  build-windows:
    name: Windows Build & Test
    runs-on: windows-latest
    env:
      CMAKE_GENERATOR: Visual Studio 16 2019
      MYSQL_DIR: C:/mysql-8.0.22-winx64
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      # Configure build environment/dependencies
      - name: Install MySQL client libs
        run: |
          curl https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.22-winx64.zip -o mysql.zip
          unzip -d C:/ mysql.zip
            
      - name: Create build environment
        shell: bash
        run: cmake -E make_directory ${{ github.workspace }}/build

      - name: Configure CMake
        shell: bash
        run: cmake -S . -B build -A x64
                -G "$CMAKE_GENERATOR"
                -DCMAKE_BUILD_TYPE=$BUILD_TYPE
                -DMYSQLCLIENT_STATIC_LINKING=true

      # Build driver
      - name: Build driver
        working-directory: ${{ github.workspace }}\build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      # Configure test environment
      - name: Add DSN to registry
        shell: bash
        run: |
          cd build/bin/Release
          ./myodbc-installer -d -a -n "myodbc8a" -t "DRIVER=${{ github.workspace }}\build\lib\Release\myodbc8a.dll;SETUP=${{ github.workspace }}\build\lib\Release\myodbc8S.dll"
          ./myodbc-installer -s -a -c2 -n "test" -t "DRIVER=myodbc8a;SERVER=localhost;DATABASE=test;UID=root;PWD="

      - name: Start MySQL server for tests
        if: success()
        shell: bash
        run: |
            $MYSQL_DIR/bin/mysqld --initialize-insecure --console
            $MYSQL_DIR/bin/mysqld --console &
            sleep 20
            $MYSQL_DIR/bin/mysql -u root -e "create database test"

      # Test driver
      - name: Run driver tests
        if: success()
        working-directory: ${{ github.workspace }}/build/test
        shell: bash
        run: ctest -C $BUILD_TYPE
        env:
          TEST_DSN: test
          TEST_UID: root
          TEST_PASSWORD: 
          TEST_DRIVER: myodbc8a

      # Upload artifacts
      - name: Upload build artifacts - Binaries
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: windows-binaries
          path: ${{ github.workspace }}/build/bin/
      - name: Upload build artifacts - Libraries
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: windows-libraries
          path: ${{ github.workspace }}/build/lib/
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: windows-ctest_results
          path: ${{ github.workspace }}/build/test/Testing/Temporary/LastTest.log


  build-mac:
    name: Mac Build & Test
    runs-on: macos-latest
    env:
      CMAKE_GENERATOR: Unix Makefiles
      MYSQL_DIR: /usr/local/opt/mysql-client
      ODBC_DM_INCLUDES: /usr/local/include
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      # Configure build environment/dependencies
      - name: Install MySQL client libs & other dependencies
        run: |
          brew unlink unixodbc
          brew install libiodbc mysql mysql-client
      
      - name: Create build environment
        shell: bash
        run: cmake -E make_directory ${{ github.workspace }}/Build

      - name: Configure CMake
        shell: bash
        run: cmake -S . -B build
                -G "$CMAKE_GENERATOR"
                -DCMAKE_BUILD_TYPE=$BUILD_TYPE
                -DMYSQLCLIENT_STATIC_LINKING=true
                -DODBC_INCLUDES=$ODBC_DM_INCLUDES

      # Build driver
      - name: Build driver
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      # Configure test environment
      - name: Start MySQL server for tests
        if: success()
        working-directory: ${{ github.workspace }}/test/docker
        shell: bash
        run: |
          mysql.server start
          mysql -u root -e "create database test"

      # Test driver
      - name: Run driver tests
        if: success()
        working-directory: ${{ github.workspace }}/build/test
        shell: bash
        run: ctest -C $BUILD_TYPE
        env:
          TEST_DSN: myodbc8a
          TEST_UID: root
          TEST_PASSWORD: 
          TEST_DRIVER: ${{ github.workspace }}/build/lib/libmyodbc8a.so
          ODBCINI: ${{ github.workspace }}/build/test/odbc.ini
          ODBCINSTINI: ${{ github.workspace }}/build/test/odbcinst.ini

      # Upload artifacts
      - name: Upload build artifacts - Binaries
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: macos-binaries
          path: ${{ github.workspace }}/build/bin/
      - name: Upload build artifacts - Libraries
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: macos-libraries
          path: ${{ github.workspace }}/build/lib/
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: macos-ctest_results
          path: ${{ github.workspace }}/build/test/Testing/Temporary/LastTest.log


  build-linux:
    name: Linux Build & Test
    runs-on: ubuntu-20.04
    env:
      CMAKE_GENERATOR: Unix Makefiles
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      # Configure build environment/dependencies
      - name: Install MySQL client libs & other dependencies
        run: sudo apt-get install 
                build-essential 
                libgtk-3-dev 
                libmysqlclient-dev 
                unixodbc
                unixodbc-dev

      - name: Create build environment
        shell: bash
        run: cmake -E make_directory ${{ github.workspace }}/build

      - name: Configure CMake
        shell: bash
        run: cmake -S . -B build
                -G "$CMAKE_GENERATOR"
                -DCMAKE_BUILD_TYPE=$BUILD_TYPE
                -DMYSQLCLIENT_STATIC_LINKING=true
                -DWITH_UNIXODBC=1

      # Build driver
      - name: Build driver
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      # Configure test environment
      - name: Start MySQL server for tests
        if: success()
        working-directory: ${{ github.workspace }}/test/docker
        shell: bash
        # Give time for the container to start/initialize, then output container logs
        run: docker-compose up -d &&
          sleep 20 &&     
          docker logs myodbc-test

      # Test driver
      - name: Run driver tests
        if: success()
        working-directory: ${{ github.workspace }}/build/test
        shell: bash
        run: ctest -C $BUILD_TYPE
        env:
          TEST_DSN: myodbc8a
          TEST_UID: root
          TEST_PASSWORD: root
          TEST_DRIVER: libmyodbc8a.so
          ODBCINI: ${{ github.workspace }}/build/test/odbc.ini
          ODBCINSTINI: ${{ github.workspace }}/build/test/odbcinst.ini

      # Upload artifacts
      - name: Upload build artifacts - Binaries
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: linux-binaries
          path: ${{ github.workspace }}/build/bin/
      - name: Upload build artifacts - Libraries
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: linux-libraries
          path: ${{ github.workspace }}/build/lib/
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: linux-ctest_results
          path: ${{ github.workspace }}/build/test/Testing/Temporary/LastTest.log
