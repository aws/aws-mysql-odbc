name: Dockerized Performance Tests

# This workflow should always be triggered manually 
on: 
  workflow_dispatch:

env:
  BUILD_TYPE: Release

permissions:
  id-token: write
  contents: read

jobs:
  build-dockerized-performance-tests:
    concurrency: # Cancel previous runs in the same branch
      group: environment-${{ github.ref }}
      cancel-in-progress: true
    name: Dockerized Performance Tests 
    runs-on: ubuntu-latest
    env:
      CMAKE_GENERATOR: Unix Makefiles

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Cache AWS SDK libraries
        id: cache-dynamic-aws-sdk
        uses: actions/cache@v4
        with:
          path: |
            aws_sdk
          key: ${{ runner.os }}-aws-sdk-dynamic-lib

      - name: Build and install AWS SDK C++
        working-directory: ./scripts
        if: steps.cache-dynamic-aws-sdk.outputs.cache-hit != 'true'
        run: |
          ./build_aws_sdk_unix.sh $BUILD_TYPE

      - name: 'Set up JDK'
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 17

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: mysql-linux-integration

      - name: 'Run Performance Tests'
        working-directory: ${{ github.workspace }}/testframework
        run: |
          ./gradlew --no-parallel --no-daemon test-performance --info
        env:
          TEST_DSN: awsmysqlodbca
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          DRIVER_PATH: ${{ github.workspace }}

      - name: 'Get Github Action IP'
        if: always()
        id: ip
        uses: haythem/public-ip@v1.3
        
      - name: 'Remove Github Action IP'
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-name default \
            --protocol tcp \
            --port 3306 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32 \
          2>&1 > /dev/null;

      - name: 'Display and save log'
        if: always()
        working-directory: ${{ github.workspace }}
        run: |
          echo "Displaying logs"
          mkdir -p ./reports/tests
          if [[ -f myodbc.log && -s myodbc.log ]]; then 
            cat myodbc.log
            cp myodbc.log ./reports/tests/myodbc.log
          fi
          if [[ -f failover_performance.xlsx && -s failover_performance.xlsx ]]; then
            cp failover_performance.xlsx ./reports/tests/failover_performance.xlsx
          fi
          if [[ -f efm_performance.xlsx && -s efm_performance.xlsx ]]; then
            cp efm_performance.xlsx ./reports/tests/efm_performance.xlsx
          fi
          if [[ -f efm_detection_performance.xlsx && -s efm_detection_performance.xlsx ]]; then
            cp efm_detection_performance.xlsx ./reports/tests/efm_detection_performance.xlsx
          fi

      - name: 'Archive log results'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'performance-test-logs'
          path: reports/tests/
          retention-days: 3
